/*
* Author:  Sebastian Wolf
* Created:  August 2018
*/

#include <Arduino.h>
#include "Zusi3Schnittstelle.h"
#include "SwitecX25.h"

// standard X25.168 range 315 degrees at 1/3 degree steps
#define STEP_SMALL (810) // SMALL GAUGE METER
#define STEP_BIG (900)	 // BIG GAUGE METER

//#define STEP_SMALL (355)
// For motors connected to digital pins 4,5,6,7
SwitecX25 motor_yellow(STEP_BIG, 16, 17, 18, 19);
SwitecX25 motor_red(STEP_BIG, 32, 33, 26, 27);
//Bitte die #define der Zusi3Schnittstelle.h nutzen
#if defined(ESP8266_Wifi) || defined(ESP32_Wifi)

const char *ssid = "InternetOfShit";
const char *password = "Atlas2012";
#endif
#ifdef ESP32_Ethernet
//nothing
#endif
#ifdef Ethernet_Shield //Arduino Uno hat zu wenig RAM f√ºr Datenpakete
byte *mac = new byte[6]{0x8c, 0x16, 0x45, 0x82, 0xfc, 0x72};
#endif
#ifdef AVR_Wifi
const char *ssid = "SSID";
const char *password = "PASSWORD";
#endif

Zusi3Schnittstelle *zusi;

void setup()
{
	Serial.begin(115200);
	Serial.println("Go!");

	motor_yellow.zero();
	motor_red.zero();
	motor_yellow.update();
	motor_red.update();
}

void loop()
{
	motor_yellow.zero();
	motor_red.zero();
	delay(500);
	motor_yellow.update();
	motor_red.update();
	delay(500);
	motor_red.setPosition(STEP_SMALL / 2);
	motor_red.updateBlocking();
	motor_yellow.setPosition(STEP_SMALL / 2);
	motor_yellow.updateBlocking();
	delay(500);
}
